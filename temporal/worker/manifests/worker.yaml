kind: Service
apiVersion: v1
metadata:
  name: temporal-worker-app
  labels:
    app: temporal-worker-app
spec:
  selector:
    app: temporal-worker-app
  ports:
  - name: http
    protocol: TCP
    port: 8090
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-worker-app
  labels:
    app: temporal-worker-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal-worker-app
  template:
    metadata:
      labels:
        io.kompose.network/temporal-network: "true"
        app: temporal-worker-app
    spec:
      containers:
      - name: node
        image: ${SERVICE_TEMPORAL_IMAGE_NAME}
        env:
        - name: TEMPORAL_GRPC_ENDPOINT
          value: temporal:7233
        - name: TEMPORAL_TLS_CA
          value: /etc/temporal/config/certs/ca.cert
        - name: TEMPORAL_TLS_CERT
          value: /etc/temporal/config/certs/cluster.cert
        - name: TEMPORAL_TLS_KEY
          value: /etc/temporal/config/certs/cluster.key
        - name: TEMPORAL_TLS_SERVER_NAME
          value: tls-sample
        resources: {}  
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        imagePullPolicy: Always
        volumeMounts:
          - name: mtls-certs
            mountPath: /etc/temporal/config/certs
            readOnly: true
      volumes:
        - name: mtls-certs
          projected:
            sources:
              - secret:
                  name: ca-cert
              - secret:
                  name: cluster-cert