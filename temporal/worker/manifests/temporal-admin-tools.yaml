apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml -o k8s/temporal.yaml
    kompose.version: 1.26.1 (1b040dd2)
  labels:
    io.kompose.service: temporal-admin-tools
  name: temporal-admin-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: temporal-admin-tools
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o k8s/temporal.yaml
        kompose.version: 1.26.1 (1b040dd2)
      labels:
        io.kompose.network/temporal-network: "true"
        io.kompose.service: temporal-admin-tools
    spec:
      containers:
        - env:
            - name: TEMPORAL_CLI_ADDRESS
              value: temporal:7233
            - name: TEMPORAL_CLI_TLS_CA
              value: /etc/temporal/config/certs/ca.cert
            - name: TEMPORAL_CLI_TLS_CERT
              value: /etc/temporal/config/certs/client.cert
            - name: TEMPORAL_CLI_TLS_KEY
              value: /etc/temporal/config/certs/client.key
            - name: TEMPORAL_CLI_TLS_ENABLE_HOST_VERIFICATION
              value: "true"
            - name: TEMPORAL_CLI_TLS_SERVER_NAME
              value: tls-sample
          image: temporalio/admin-tools:1.17.1
          name: temporal-admin-tools
          resources: {}
          volumeMounts:
            - name: mtls-certs
              mountPath: /etc/temporal/config/certs
              readOnly: true
          stdin: true
          tty: true
      restartPolicy: Always
      enableServiceLinks: false
      volumes:
        - name: mtls-certs
          projected:
            sources:
              - secret:
                  name: ca-cert
              - secret:
                  name: cluster-cert
status: {}